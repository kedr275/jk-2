# Python LanguageHelper type mappings
type.standard.Boolean = bool
type.standard.Long = long
type.standard.Double = float
type.standard.String = str
type.standard.Opaque = DataValue
type.standard.Binary = str
type.standard.void = None
type.standard.Secret = str
type.standard.DateTime = datetime.datetime
type.standard.URI = str
type.standard.ID = str
type.standard.DynamicStructure = vmware.vapi.struct.VapiStruct

type.standard.format.list = %s

client.profile.excludes = provider.py, impl.py.template
provider.profile.excludes = client.py, impl.py.template
template.profile.includes = impl.py.template

# IDL terminology that requires translation to Python terms
# Plural forms and capitalized forms (of both singular and plural) are implicit, as are the identity mappings.
term.service = class
term.services = classes
term.package = module
term.operation = method
term.result = return value
term.error = exception
term.structure = class
term.structures = classes
term.field = attribute
term.enumerated\ type = class
term.enumerated\ types = classes
term.enumeration\ value = class attribute
term.constant = class attribute

term.unset = None
term.map = :class:`dict`
term.set = :class:`set`
term.list = :class:`list`
term.long = :class:`int`
term.double = :class:`decimal.Decimal`
term.string = :class:`str`
term.boolean = :class:`bool`

# Keywords in the Python language
name.reserved.words = \
    and, as, assert, break, class, continue, def, \
    del, elif, else, except, exec, finally, for, self, \
    from, global, if, import, in, is, lambda, not, \
    or, pass, print, raise, return, try, while, with, yield
